#include <iostream>
using namespace std;

//El algoritmo lineal recorre un arreglo y cada que llega a una posicion divisible entre 6 se cuenta una columna y asi cuando encuentra un 0 devuelve el numero de columna en la que esta el edificio mas alto.

int tallestbuilding(int building[])//Lineal
{
    int col = 0;
    for (int n=0; n<(5*6); n++)
    {
        if(building[n] == 0)
            {return col+1;}
        if(n%6==0)
            {col = 0;} 
        col++;
    }
    return -1;
}

//El algotirmo logaritmico evalua cada uno de los elementos de una matriz, el caso base es de la linea 25 a la 28, los dos if siguientes actualizan la busqueda en columnas y filas y aplican recursividad.

int tallestbuilding_2(int building_2[5][6], int Row, int Col, int col = 0, int row = 0)//Logaritmico
{
    //Caso Base
    if (building_2[row][col] == 0)
        return col+1;
    else if (Row < col or Col < row)
        return -1;
    //Recursividad
    if (col == Col-1)
        return tallestbuilding_2(building_2, Row, Col, 0, row += 1);
    if (building_2[row][col] != 0)
        return tallestbuilding_2(building_2, Row, Col, col += 1, row);
    return -1;
}


int main()
{
    int building[] = {1,1,1,1,0,1,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1};
    cout << tallestbuilding(building) << endl;
    int building_2[5][6] = {
        {1, 1, 1, 1, 0, 1},
        {0, 1, 0, 1, 0, 1},
        {0, 1, 0, 0, 0, 1},
        {0, 1, 0, 0, 0, 1},
        {0, 0, 0, 0, 0, 1}};

    cout << tallestbuilding_2(building_2, 6, 5) << endl;
    return 0;
}
